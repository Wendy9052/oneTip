{"remainingRequest":"/Users/wendy/Documents/test_proj/oneTip/onetip/node_modules/babel-loader/lib/index.js!/Users/wendy/Documents/test_proj/oneTip/onetip/src/mock/mock.js","dependencies":[{"path":"/Users/wendy/Documents/test_proj/oneTip/onetip/src/mock/mock.js","mtime":1636532436675},{"path":"/Users/wendy/Documents/test_proj/oneTip/onetip/babel.config.js","mtime":1636363647938},{"path":"/Users/wendy/Documents/test_proj/oneTip/onetip/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wendy/Documents/test_proj/oneTip/onetip/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IE1vY2sgZnJvbSAnbW9ja2pzJzsKdmFyIGdldExpc3QgPSBNb2NrLm1vY2soJy9hcGkvZ2V0TGlzdCcsICdnZXQnLCBmdW5jdGlvbiAob3B0aW9ucykgewogIHZhciBsaXN0SW1nID0gW3sKICAgIGlkOiAxLAogICAgdXJsOiAnaHR0cDovL3kuZ3RpbWcuY24vbXVzaWMvY29tbW9uL3VwbG9hZC9NVVNJQ19GT0NVUy8yOTAwNzcuanBnJwogIH0sIHsKICAgIGlkOiAyLAogICAgdXJsOiAnaHR0cDovL3kuZ3RpbWcuY24vbXVzaWMvY29tbW9uL3VwbG9hZC9NVVNJQ19GT0NVUy8yODk0MTYuanBlZycKICB9LCB7CiAgICBpZDogMywKICAgIHVybDogJ2h0dHA6Ly95Lmd0aW1nLmNuL211c2ljL2NvbW1vbi91cGxvYWQvTVVTSUNfRk9DVVMvMjkwMjU2LmpwZycKICB9XTsKICB2YXIgZGF0YSA9IHsKICAgIGJvZHk6IHsKICAgICAgbGlzdEltZzogbGlzdEltZwogICAgfSwKICAgIG1ldGE6IHsKICAgICAgY29kZTogMjAwLAogICAgICBtZXNzYWdlOiAn6I635Y+W5oiQ5YqfJwogICAgfQogIH07CiAgcmV0dXJuIGRhdGE7Cn0pOwpleHBvcnQgZGVmYXVsdCB7CiAgZ2V0TGlzdDogZ2V0TGlzdAp9Ow=="},{"version":3,"sources":["/Users/wendy/Documents/test_proj/oneTip/onetip/src/mock/mock.js"],"names":["Mock","getList","mock","options","listImg","id","url","data","body","meta","code","message"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;AAEA,IAAIC,OAAO,GAAGD,IAAI,CAACE,IAAL,CAAU,cAAV,EAA0B,KAA1B,EAAiC,UAACC,OAAD,EAAa;AAC1D,MAAIC,OAAO,GAAG,CACZ;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,GAAG,EAAE;AAFP,GADY,EAIT;AACDD,IAAAA,EAAE,EAAE,CADH;AAEDC,IAAAA,GAAG,EAAE;AAFJ,GAJS,EAOT;AACDD,IAAAA,EAAE,EAAE,CADH;AAEDC,IAAAA,GAAG,EAAE;AAFJ,GAPS,CAAd;AAYA,MAAIC,IAAI,GAAG;AACTC,IAAAA,IAAI,EAAE;AACJJ,MAAAA,OAAO,EAAEA;AADL,KADG;AAITK,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAE,GADF;AAEJC,MAAAA,OAAO,EAAE;AAFL;AAJG,GAAX;AASA,SAAOJ,IAAP;AACD,CAvBa,CAAd;AAyBA,eAAe;AACbN,EAAAA,OAAO,EAAPA;AADa,CAAf","sourcesContent":["import Mock from 'mockjs'\n\nlet getList = Mock.mock('/api/getList', 'get', (options) => {\n  let listImg = [\n    { \n      id: 1,\n      url: 'http://y.gtimg.cn/music/common/upload/MUSIC_FOCUS/290077.jpg'\n    }, {\n      id: 2,\n      url: 'http://y.gtimg.cn/music/common/upload/MUSIC_FOCUS/289416.jpeg'\n    }, {\n      id: 3,\n      url: 'http://y.gtimg.cn/music/common/upload/MUSIC_FOCUS/290256.jpg'\n    }\n  ]\n  let data = {\n    body: {\n      listImg: listImg\n    },\n    meta: {\n      code: 200,\n      message: '获取成功'\n    }\n  }\n  return data\n})\n\nexport default {\n  getList\n}\n"]}]}